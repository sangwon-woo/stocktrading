데이터 프레임에서 mysql로 to_sql을 보낼 수 있다.
그럼 어떻게 될까. 
가령 df의 모습이 다음과 같다고 하자. 
 	col0 	col1 	col2
0 	1 	    10 	    100
1 	2 	    20 	    200
2 	3 	    30  	300
3 	4 	    40  	400

이 상태에서 df.to_sql('테이블명', conn) 하면 mysql에는 다음과 같이 데이터가 저장된다.

index col0 col1 col2
0	    1	10	100
1	    2	20	200
2	    3	30	300
3	    4	40	400

index, col0, col1, col2 모두 데이터 타입은 bigint다. 아마 bigint를 디폴트로 하나보다. 

참고로 conn은 다음과 같다.
import pymysql
from sqlalchemy import create_engine

base_addr = "mysql+mysqldb://db_id:db_pw@db_ip:db_port/schema"

pymysql.install_as_MySQLdb()
engine = create_engine(base_addr, encoding='utf-8')
conn = engine.connect()

참고로 schema는 안붙여도 된다. 

DataFrame.to_sql 메서드 파라미터
DataFrame.to_sql(name, con, schema=None, if_exists='fail', index=True, index_label=None, chunksize=None, dtype=None, method=None)
* name : SQL Table 이름으로 파이썬 문자열 형태로 나타낸다.
* con : Cursor 객체
* schema : Schema를 지정할 수 있다. 기본값은 None이다.
* if_exists : 데이터베이스에 테이블이 존재할 때 수행 동작을 지정한다. 'fail', 'replace', 'append' 중 하나를 사용할 수 있다.
* index : DataFrame의 index를 데이터베이스에 컬럼으로 추가할지 여부를 지정한다.
* index_label : 인덱스 컬럼에 대한 라벨을 지정할 수 있다. 인덱스 명이라고 생각하면 된다.
* chunksize : 한 번에 써지는 row의 크기를 정숫값으로 지정할 수 있다. 기본값은 None으로 DataFrame 내의 모든 row가 한 번에 써진다.
* dtype : 컬럼에 대한 SQL 타입을 파이썬 딕셔너리로 전달할 수 있다.

MySQL에서 Table 로드하기
df = pd.read_sql('select * from kakao', con, index_col=None)
index_col로 인덱스 컬럼을 지정할 수 있다.